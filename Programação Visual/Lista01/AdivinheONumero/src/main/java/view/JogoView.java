/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.awt.Color;
import javax.swing.JOptionPane;
import logic.Jogo;

/**
 *
 * @author crist
 */
public class JogoView extends javax.swing.JFrame {

    Jogo jogo;
    int dificuldade, valor, palpite;
    Color rosa, azul;

    /**
     * Creates new form NewJFrame
     */
    public JogoView() {
        azul = new Color(8, 174, 234);
        rosa = new Color(250, 139, 255);
        jogo = new Jogo();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        jLabel1 = new javax.swing.JLabel();
        escolherDificuldade = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        inputPalpite = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        palpitar = new javax.swing.JButton();
        dica = new javax.swing.JLabel();
        chances = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        kGradientPanel1.setkEndColor(new java.awt.Color(42, 245, 152));
        kGradientPanel1.setkStartColor(new java.awt.Color(8, 174, 234));

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(225, 225, 225));
        jLabel1.setText("ADIVINHE O NÚMERO");

        escolherDificuldade.setBackground(new java.awt.Color(250, 139, 255));
        escolherDificuldade.setFont(new java.awt.Font("Roboto", 1, 12)); // NOI18N
        escolherDificuldade.setForeground(new java.awt.Color(225, 225, 225));
        escolherDificuldade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FÁCIL", "MÉDIO", "DIFÍCIL" }));

        jLabel2.setFont(new java.awt.Font("Roboto Black", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(225, 225, 225));
        jLabel2.setText("Dificuldade:");

        inputPalpite.setBackground(new java.awt.Color(250, 139, 255));
        inputPalpite.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        inputPalpite.setForeground(new java.awt.Color(225, 225, 225));

        jLabel3.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(225, 225, 225));
        jLabel3.setText("Palpite:");

        palpitar.setBackground(new java.awt.Color(8, 174, 234));
        palpitar.setFont(new java.awt.Font("Roboto Black", 1, 14)); // NOI18N
        palpitar.setForeground(new java.awt.Color(225, 225, 225));
        palpitar.setText("Palpitar");
        palpitar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                palpitarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                palpitarMouseExited(evt);
            }
        });
        palpitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                palpitarActionPerformed(evt);
            }
        });

        dica.setFont(new java.awt.Font("Roboto Black", 1, 14)); // NOI18N
        dica.setForeground(new java.awt.Color(225, 225, 225));
        dica.setText("Dica: ");

        chances.setFont(new java.awt.Font("Roboto Black", 1, 14)); // NOI18N
        chances.setForeground(new java.awt.Color(225, 225, 225));
        chances.setText("Chanches:");

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jLabel1))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(escolherDificuldade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(inputPalpite, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(palpitar))))
                .addContainerGap(115, Short.MAX_VALUE))
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(chances)
                .addGap(31, 31, 31))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(21, 21, 21)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(escolherDificuldade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputPalpite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(palpitar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dica)
                    .addComponent(chances))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void palpitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_palpitarActionPerformed
        chances.setText(String.valueOf(jogo.getChances()));
        dificuldade = escolherDificuldade.getSelectedIndex();
        switch (dificuldade) {
            case 0:
                try {
                if (jogo.getChances() >= 1) {
                    palpite = Integer.parseInt(inputPalpite.getText());
                    valor = jogo.valorFacil();
                    if (palpite == valor) {
                        JOptionPane.showMessageDialog(this, "Parabéns, você acertou!", "GANHOU!!!", JOptionPane.INFORMATION_MESSAGE);
                    }
                    else if (palpite < valor) {
                        dica.setText(" Número é maior!");
                        jogo.diminuirChances();
                        chances.setText(String.valueOf(jogo.getChances()));
                    }
                    else if (palpite > valor) {
                        dica.setText(" Número é menor!");
                        jogo.diminuirChances();
                        chances.setText(String.valueOf(jogo.getChances()));
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Suas chances terminaram", "FIM DE JOGO", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Valor de entrada inválido", "Error na entrada", JOptionPane.INFORMATION_MESSAGE);
            }
            break;
            case 1:
                try {
                if (jogo.getChances() >= 1) {
                    palpite = Integer.parseInt(inputPalpite.getText());
                    valor = jogo.valorMedio();
                    if (palpite == valor) {
                        JOptionPane.showMessageDialog(this, "Parabéns, você acertou!", "GANHOU!!!", JOptionPane.INFORMATION_MESSAGE);
                    }
                    else if (palpite < valor) {
                        dica.setText(" Número é maior!");
                        jogo.diminuirChances();
                        chances.setText(String.valueOf(jogo.getChances()));
                    }
                    else if (palpite > valor) {
                        dica.setText(" Número é menor!");
                        jogo.diminuirChances();
                        chances.setText(String.valueOf(jogo.getChances()));
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Suas chances terminaram", "FIM DE JOGO", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Valor de entrada inválido", "Error na entrada", JOptionPane.INFORMATION_MESSAGE);
            }

            break;
            case 2:
                try {
                if (jogo.getChances() >= 1) {
                    palpite = Integer.parseInt(inputPalpite.getText());
                    valor = jogo.valorDificil();
                    if (palpite == valor) {
                        JOptionPane.showMessageDialog(this, "Parabéns, você acertou!", "GANHOU!!!", JOptionPane.INFORMATION_MESSAGE);
                    }
                    else if (palpite < valor) {
                        dica.setText(" Número é maior!");
                        jogo.diminuirChances();
                        chances.setText(String.valueOf(jogo.getChances()));
                    }
                    else if (palpite > valor) {
                        dica.setText(" Número é menor!");
                        jogo.diminuirChances();
                        chances.setText(String.valueOf(jogo.getChances()));
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Suas chances terminaram", "FIM DE JOGO", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Valor de entrada inválido", "Error na entrada", JOptionPane.INFORMATION_MESSAGE);
            }

            break;
            default:
                JOptionPane.showMessageDialog(this, "Jogada inválida", "ERROR", JOptionPane.INFORMATION_MESSAGE);
                break;

        }
    }//GEN-LAST:event_palpitarActionPerformed

    private void palpitarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_palpitarMouseEntered
        palpitar.setBackground(rosa);
        palpitar.setForeground(Color.BLACK);
    }//GEN-LAST:event_palpitarMouseEntered

    private void palpitarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_palpitarMouseExited
        palpitar.setBackground(azul);
        palpitar.setForeground(Color.WHITE);
    }//GEN-LAST:event_palpitarMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JogoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JogoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JogoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JogoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JogoView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel chances;
    private javax.swing.JLabel dica;
    private javax.swing.JComboBox<String> escolherDificuldade;
    private javax.swing.JTextField inputPalpite;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JButton palpitar;
    // End of variables declaration//GEN-END:variables
}
